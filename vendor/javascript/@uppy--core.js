// @uppy/core@4.4.3 downloaded from https://ga.jspm.io/npm:@uppy/core@4.4.3/lib/index.js

import e from"@uppy/utils/lib/Translator";import t from"namespace-emitter";import{nanoid as s}from"nanoid/non-secure";import i from"lodash/throttle.js";import o from"@uppy/store-default";import r from"@uppy/utils/lib/getFileType";import l from"@uppy/utils/lib/getFileNameAndExtension";import{getSafeFileId as a}from"@uppy/utils/lib/generateFileID";import n from"@uppy/utils/lib/getTimeStamp";import d from"@transloadit/prettier-bytes";import c from"mime-match";export{default as UIPlugin}from"./UIPlugin.js";export{default as BasePlugin}from"./BasePlugin.js";import"preact";import"@uppy/utils/lib/findDOMElement";import"@uppy/utils/lib/getTextDirection";function supportsUploadProgress(e){e==null&&typeof navigator!=="undefined"&&(e=navigator.userAgent);if(!e)return true;const t=/Edge\/(\d+\.\d+)/.exec(e);if(!t)return true;const s=t[1];const i=s.split(".",2);const o=parseInt(i[0],10);const r=parseInt(i[1],10);return o<15||o===15&&r<15063||(o>18||o===18&&r>=18218)}function getFileName(e,t){return t.name?t.name:e.split("/")[0]==="image"?`${e.split("/")[0]}.${e.split("/")[1]}`:"noname"}const u={debug:()=>{},warn:()=>{},error:function(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return console.error(`[Uppy] [${n()}]`,...t)}};const h={debug:function(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return console.debug(`[Uppy] [${n()}]`,...t)},warn:function(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return console.warn(`[Uppy] [${n()}]`,...t)},error:function(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return console.error(`[Uppy] [${n()}]`,...t)}};
/* eslint-disable @typescript-eslint/ban-ts-comment */const p={maxFileSize:null,minFileSize:null,maxTotalFileSize:null,maxNumberOfFiles:null,minNumberOfFiles:null,allowedFileTypes:null,requiredMetaFields:[]};class RestrictionError extends Error{constructor(e,t){var s;super(e);this.isRestriction=true;this.isUserFacing=(s=t==null?void 0:t.isUserFacing)==null||s;t!=null&&t.file&&(this.file=t.file)}}class Restricter{constructor(e,t){this.getI18n=t;this.getOpts=()=>{var t;const s=e();if(((t=s.restrictions)==null?void 0:t.allowedFileTypes)!=null&&!Array.isArray(s.restrictions.allowedFileTypes))throw new TypeError("`restrictions.allowedFileTypes` must be an array");return s}}validateAggregateRestrictions(e,t){const{maxTotalFileSize:s,maxNumberOfFiles:i}=this.getOpts().restrictions;if(i){const s=e.filter((e=>!e.isGhost));if(s.length+t.length>i)throw new RestrictionError(`${this.getI18n()("youCanOnlyUploadX",{smart_count:i})}`)}if(s){const i=[...e,...t].reduce(((e,t)=>{var s;return e+((s=t.size)!=null?s:0)}),0);if(i>s)throw new RestrictionError(this.getI18n()("aggregateExceedsSize",{sizeAllowed:d(s),size:d(i)}))}}validateSingleFile(e){const{maxFileSize:t,minFileSize:s,allowedFileTypes:i}=this.getOpts().restrictions;if(i){const t=i.some((t=>t.includes("/")?!!e.type&&c(e.type.replace(/;.*?$/,""),t):!(t[0]!=="."||!e.extension)&&e.extension.toLowerCase()===t.slice(1).toLowerCase()));if(!t){const t=i.join(", ");throw new RestrictionError(this.getI18n()("youCanOnlyUploadFileTypes",{types:t}),{file:e})}}if(t&&e.size!=null&&e.size>t){var o;throw new RestrictionError(this.getI18n()("exceedsSize",{size:d(t),file:(o=e.name)!=null?o:this.getI18n()("unnamed")}),{file:e})}if(s&&e.size!=null&&e.size<s)throw new RestrictionError(this.getI18n()("inferiorSize",{size:d(s)}),{file:e})}validate(e,t){t.forEach((e=>{this.validateSingleFile(e)}));this.validateAggregateRestrictions(e,t)}validateMinNumberOfFiles(e){const{minNumberOfFiles:t}=this.getOpts().restrictions;if(t&&Object.keys(e).length<t)throw new RestrictionError(this.getI18n()("youHaveToAtLeastSelectX",{smart_count:t}))}getMissingRequiredMetaFields(e){var t;const s=new RestrictionError(this.getI18n()("missingRequiredMetaFieldOnFile",{fileName:(t=e.name)!=null?t:this.getI18n()("unnamed")}));const{requiredMetaFields:i}=this.getOpts().restrictions;const o=[];for(const t of i)Object.hasOwn(e.meta,t)&&e.meta[t]!==""||o.push(t);return{missingFields:o,error:s}}}var f={strings:{addBulkFilesFailed:{0:"Failed to add %{smart_count} file due to an internal error",1:"Failed to add %{smart_count} files due to internal errors"},youCanOnlyUploadX:{0:"You can only upload %{smart_count} file",1:"You can only upload %{smart_count} files"},youHaveToAtLeastSelectX:{0:"You have to select at least %{smart_count} file",1:"You have to select at least %{smart_count} files"},aggregateExceedsSize:"You selected %{size} of files, but maximum allowed size is %{sizeAllowed}",exceedsSize:"%{file} exceeds maximum allowed size of %{size}",missingRequiredMetaField:"Missing required meta fields",missingRequiredMetaFieldOnFile:"Missing required meta fields in %{fileName}",inferiorSize:"This file is smaller than the allowed size of %{size}",youCanOnlyUploadFileTypes:"You can only upload: %{types}",noMoreFilesAllowed:"Cannot add more files",noDuplicates:"Cannot add the duplicate file '%{fileName}', it already exists",companionError:"Connection with Companion failed",authAborted:"Authentication aborted",companionUnauthorizeHint:"To unauthorize to your %{provider} account, please go to %{url}",failedToUpload:"Failed to upload %{file}",noInternetConnection:"No Internet connection",connectedToInternet:"Connected to the Internet",noFilesFound:"You have no files or folders here",noSearchResults:"Unfortunately, there are no results for this search",selectX:{0:"Select %{smart_count}",1:"Select %{smart_count}"},allFilesFromFolderNamed:"All files from folder %{name}",openFolderNamed:"Open folder %{name}",cancel:"Cancel",logOut:"Log out",logIn:"Log in",pickFiles:"Pick files",pickPhotos:"Pick photos",filter:"Filter",resetFilter:"Reset filter",loading:"Loading...",loadedXFiles:"Loaded %{numFiles} files",authenticateWithTitle:"Please authenticate with %{pluginName} to select files",authenticateWith:"Connect to %{pluginName}",signInWithGoogle:"Sign in with Google",searchImages:"Search for images",enterTextToSearch:"Enter text to search for images",search:"Search",resetSearch:"Reset search",emptyFolderAdded:"No files were added from empty folder",addedNumFiles:"Added %{numFiles} file(s)",folderAlreadyAdded:'The folder "%{folder}" was already added',folderAdded:{0:"Added %{smart_count} file from %{folder}",1:"Added %{smart_count} files from %{folder}"},additionalRestrictionsFailed:"%{count} additional restrictions were not fulfilled",unnamed:"Unnamed",pleaseWait:"Please wait"}};function _classPrivateFieldLooseBase(e,t){if(!{}.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var g=0;function _classPrivateFieldLooseKey(e){return"__private_"+g+++"_"+e}const m={version:"4.4.3"};const v={totalProgress:0,allowNewUpload:true,error:null,recoveredState:null};var F=_classPrivateFieldLooseKey("plugins");var y=_classPrivateFieldLooseKey("restricter");var P=_classPrivateFieldLooseKey("storeUnsubscribe");var w=_classPrivateFieldLooseKey("emitter");var b=_classPrivateFieldLooseKey("preProcessors");var S=_classPrivateFieldLooseKey("uploaders");var _=_classPrivateFieldLooseKey("postProcessors");var L=_classPrivateFieldLooseKey("informAndEmit");var U=_classPrivateFieldLooseKey("checkRequiredMetaFieldsOnFile");var O=_classPrivateFieldLooseKey("checkRequiredMetaFields");var B=_classPrivateFieldLooseKey("assertNewUploadAllowed");var A=_classPrivateFieldLooseKey("transformFile");var E=_classPrivateFieldLooseKey("startIfAutoProceed");var j=_classPrivateFieldLooseKey("checkAndUpdateFileState");var T=_classPrivateFieldLooseKey("handleUploadProgress");var R=_classPrivateFieldLooseKey("updateTotalProgress");var I=_classPrivateFieldLooseKey("updateTotalProgressThrottled");var N=_classPrivateFieldLooseKey("calculateTotalProgress");var $=_classPrivateFieldLooseKey("addListeners");var C=_classPrivateFieldLooseKey("updateOnlineStatus");var z=_classPrivateFieldLooseKey("requestClientById");var k=_classPrivateFieldLooseKey("createUpload");var x=_classPrivateFieldLooseKey("getUpload");var M=_classPrivateFieldLooseKey("removeUpload");var K=_classPrivateFieldLooseKey("runUpload");class Uppy{constructor(e){Object.defineProperty(this,K,{value:_runUpload2});Object.defineProperty(this,M,{value:_removeUpload2});Object.defineProperty(this,x,{value:_getUpload2});Object.defineProperty(this,k,{value:_createUpload2});Object.defineProperty(this,$,{value:_addListeners2});Object.defineProperty(this,N,{value:_calculateTotalProgress2});Object.defineProperty(this,R,{value:_updateTotalProgress2});Object.defineProperty(this,j,{value:_checkAndUpdateFileState2});Object.defineProperty(this,E,{value:_startIfAutoProceed2});Object.defineProperty(this,A,{value:_transformFile2});Object.defineProperty(this,B,{value:_assertNewUploadAllowed2});Object.defineProperty(this,O,{value:_checkRequiredMetaFields2});Object.defineProperty(this,U,{value:_checkRequiredMetaFieldsOnFile2});Object.defineProperty(this,L,{value:_informAndEmit2});Object.defineProperty(this,F,{writable:true,value:Object.create(null)});Object.defineProperty(this,y,{writable:true,value:void 0});Object.defineProperty(this,P,{writable:true,value:void 0});Object.defineProperty(this,w,{writable:true,value:t()});Object.defineProperty(this,b,{writable:true,value:new Set});Object.defineProperty(this,S,{writable:true,value:new Set});Object.defineProperty(this,_,{writable:true,value:new Set});this.scheduledAutoProceed=null;this.wasOffline=false;Object.defineProperty(this,T,{writable:true,value:(e,t)=>{const s=e?this.getFile(e.id):void 0;if(e==null||!s){this.log(`Not setting progress for a file that has been removed: ${e==null?void 0:e.id}`);return}if(s.progress.percentage===100){this.log(`Not setting progress for a file that has been already uploaded: ${e.id}`);return}const i={bytesTotal:t.bytesTotal,percentage:t.bytesTotal!=null&&Number.isFinite(t.bytesTotal)&&t.bytesTotal>0?Math.round(t.bytesUploaded/t.bytesTotal*100):void 0};s.progress.uploadStarted!=null?this.setFileState(e.id,{progress:{...s.progress,...i,bytesUploaded:t.bytesUploaded}}):this.setFileState(e.id,{progress:{...s.progress,...i}});_classPrivateFieldLooseBase(this,I)[I]()}});Object.defineProperty(this,I,{writable:true,value:i((()=>_classPrivateFieldLooseBase(this,R)[R]()),500,{leading:true,trailing:true})});Object.defineProperty(this,C,{writable:true,value:this.updateOnlineStatus.bind(this)});Object.defineProperty(this,z,{writable:true,value:new Map});this.defaultLocale=f;const s={id:"uppy",autoProceed:false,allowMultipleUploadBatches:true,debug:false,restrictions:p,meta:{},onBeforeFileAdded:(e,t)=>!Object.hasOwn(t,e.id),onBeforeUpload:e=>e,store:new o,logger:u,infoTimeout:5e3};const r={...s,...e};this.opts={...r,restrictions:{...s.restrictions,...e&&e.restrictions}};e&&e.logger&&e.debug?this.log("You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.","warning"):e&&e.debug&&(this.opts.logger=h);this.log(`Using Core v${Uppy.VERSION}`);this.i18nInit();this.store=this.opts.store;this.setState({...v,plugins:{},files:{},currentUploads:{},capabilities:{uploadProgress:supportsUploadProgress(),individualCancellation:true,resumableUploads:false},meta:{...this.opts.meta},info:[]});_classPrivateFieldLooseBase(this,y)[y]=new Restricter((()=>this.opts),(()=>this.i18n));_classPrivateFieldLooseBase(this,P)[P]=this.store.subscribe(((e,t,s)=>{this.emit("state-update",e,t,s);this.updateAll(t)}));this.opts.debug&&typeof window!=="undefined"&&(window[this.opts.id]=this);_classPrivateFieldLooseBase(this,$)[$]()}emit(e){for(var t=arguments.length,s=new Array(t>1?t-1:0),i=1;i<t;i++)s[i-1]=arguments[i];_classPrivateFieldLooseBase(this,w)[w].emit(e,...s)}on(e,t){_classPrivateFieldLooseBase(this,w)[w].on(e,t);return this}once(e,t){_classPrivateFieldLooseBase(this,w)[w].once(e,t);return this}off(e,t){_classPrivateFieldLooseBase(this,w)[w].off(e,t);return this}updateAll(e){this.iteratePlugins((t=>{t.update(e)}))}setState(e){this.store.setState(e)}getState(){return this.store.getState()}patchFilesState(e){const t=this.getState().files;this.setState({files:{...t,...Object.fromEntries(Object.entries(e).map((e=>{let[s,i]=e;return[s,{...t[s],...i}]})))}})}setFileState(e,t){if(!this.getState().files[e])throw new Error(`Can’t set state for ${e} (the file could have been removed)`);this.patchFilesState({[e]:t})}i18nInit(){const onMissingKey=e=>this.log(`Missing i18n string: ${e}`,"error");const t=new e([this.defaultLocale,this.opts.locale],{onMissingKey:onMissingKey});this.i18n=t.translate.bind(t);this.i18nArray=t.translateArray.bind(t);this.locale=t.locale}setOptions(e){this.opts={...this.opts,...e,restrictions:{...this.opts.restrictions,...e==null?void 0:e.restrictions}};e.meta&&this.setMeta(e.meta);this.i18nInit();e.locale&&this.iteratePlugins((t=>{t.setOptions(e)}));this.setState(void 0)}resetProgress(){const e={percentage:0,bytesUploaded:false,uploadComplete:false,uploadStarted:null};const t={...this.getState().files};const s=Object.create(null);Object.keys(t).forEach((i=>{s[i]={...t[i],progress:{...t[i].progress,...e},tus:void 0,transloadit:void 0}}));this.setState({files:s,...v})}clear(){const{capabilities:e,currentUploads:t}=this.getState();if(Object.keys(t).length>0&&!e.individualCancellation)throw new Error("The installed uploader plugin does not allow removing files during an upload.");this.setState({...v,files:{}})}addPreProcessor(e){_classPrivateFieldLooseBase(this,b)[b].add(e)}removePreProcessor(e){return _classPrivateFieldLooseBase(this,b)[b].delete(e)}addPostProcessor(e){_classPrivateFieldLooseBase(this,_)[_].add(e)}removePostProcessor(e){return _classPrivateFieldLooseBase(this,_)[_].delete(e)}addUploader(e){_classPrivateFieldLooseBase(this,S)[S].add(e)}removeUploader(e){return _classPrivateFieldLooseBase(this,S)[S].delete(e)}setMeta(e){const t={...this.getState().meta,...e};const s={...this.getState().files};Object.keys(s).forEach((t=>{s[t]={...s[t],meta:{...s[t].meta,...e}}}));this.log("Adding metadata:");this.log(e);this.setState({meta:t,files:s})}setFileMeta(e,t){const s={...this.getState().files};if(!s[e]){this.log(`Was trying to set metadata for a file that has been removed: ${e}`);return}const i={...s[e].meta,...t};s[e]={...s[e],meta:i};this.setState({files:s})}getFile(e){return this.getState().files[e]}getFiles(){const{files:e}=this.getState();return Object.values(e)}getFilesByIds(e){return e.map((e=>this.getFile(e)))}getObjectOfFilesPerState(){const{files:e,totalProgress:t,error:s}=this.getState();const i=Object.values(e);const o=[];const r=[];const l=[];const a=[];const n=[];const d=[];const c=[];const u=[];const h=[];for(const e of i){const{progress:t}=e;if(!t.uploadComplete&&t.uploadStarted){o.push(e);e.isPaused||u.push(e)}t.uploadStarted||r.push(e);(t.uploadStarted||t.preprocess||t.postprocess)&&l.push(e);t.uploadStarted&&a.push(e);e.isPaused&&n.push(e);t.uploadComplete&&d.push(e);e.error&&c.push(e);(t.preprocess||t.postprocess)&&h.push(e)}return{newFiles:r,startedFiles:l,uploadStartedFiles:a,pausedFiles:n,completeFiles:d,erroredFiles:c,inProgressFiles:o,inProgressNotPausedFiles:u,processingFiles:h,isUploadStarted:a.length>0,isAllComplete:t===100&&d.length===i.length&&h.length===0,isAllErrored:!!s&&c.length===i.length,isAllPaused:o.length!==0&&n.length===o.length,isUploadInProgress:o.length>0,isSomeGhost:i.some((e=>e.isGhost))}}validateRestrictions(e,t){t===void 0&&(t=this.getFiles());try{_classPrivateFieldLooseBase(this,y)[y].validate(t,[e])}catch(e){return e}return null}validateSingleFile(e){try{_classPrivateFieldLooseBase(this,y)[y].validateSingleFile(e)}catch(e){return e.message}return null}validateAggregateRestrictions(e){const t=this.getFiles();try{_classPrivateFieldLooseBase(this,y)[y].validateAggregateRestrictions(t,e)}catch(e){return e.message}return null}checkIfFileAlreadyExists(e){const{files:t}=this.getState();return!(!t[e]||t[e].isGhost)}addFile(e){_classPrivateFieldLooseBase(this,B)[B](e);const{nextFilesState:t,validFilesToAdd:s,errors:i}=_classPrivateFieldLooseBase(this,j)[j]([e]);const o=i.filter((e=>e.isRestriction));_classPrivateFieldLooseBase(this,L)[L](o);if(i.length>0)throw i[0];this.setState({files:t});const[r]=s;this.emit("file-added",r);this.emit("files-added",s);this.log(`Added file: ${r.name}, ${r.id}, mime type: ${r.type}`);_classPrivateFieldLooseBase(this,E)[E]();return r.id}addFiles(e){_classPrivateFieldLooseBase(this,B)[B]();const{nextFilesState:t,validFilesToAdd:s,errors:i}=_classPrivateFieldLooseBase(this,j)[j](e);const o=i.filter((e=>e.isRestriction));_classPrivateFieldLooseBase(this,L)[L](o);const r=i.filter((e=>!e.isRestriction));if(r.length>0){let e="Multiple errors occurred while adding files:\n";r.forEach((t=>{e+=`\n * ${t.message}`}));this.info({message:this.i18n("addBulkFilesFailed",{smart_count:r.length}),details:e},"error",this.opts.infoTimeout);if(typeof AggregateError==="function")throw new AggregateError(r,e);{const t=new Error(e);t.errors=r;throw t}}this.setState({files:t});s.forEach((e=>{this.emit("file-added",e)}));this.emit("files-added",s);s.length>5?this.log(`Added batch of ${s.length} files`):Object.values(s).forEach((e=>{this.log(`Added file: ${e.name}\n id: ${e.id}\n type: ${e.type}`)}));s.length>0&&_classPrivateFieldLooseBase(this,E)[E]()}removeFiles(e){const{files:t,currentUploads:s}=this.getState();const i={...t};const o={...s};const r=Object.create(null);e.forEach((e=>{if(t[e]){r[e]=t[e];delete i[e]}}));function fileIsNotRemoved(e){return r[e]===void 0}Object.keys(o).forEach((e=>{const t=s[e].fileIDs.filter(fileIsNotRemoved);if(t.length===0){delete o[e];return}const{capabilities:i}=this.getState();if(t.length!==s[e].fileIDs.length&&!i.individualCancellation)throw new Error("The installed uploader plugin does not allow removing files during an upload.");o[e]={...s[e],fileIDs:t}}));const l={currentUploads:o,files:i};if(Object.keys(i).length===0){l.allowNewUpload=true;l.error=null;l.recoveredState=null}this.setState(l);_classPrivateFieldLooseBase(this,I)[I]();const a=Object.keys(r);a.forEach((e=>{this.emit("file-removed",r[e])}));a.length>5?this.log(`Removed ${a.length} files`):this.log(`Removed files: ${a.join(", ")}`)}removeFile(e){this.removeFiles([e])}pauseResume(e){if(!this.getState().capabilities.resumableUploads||this.getFile(e).progress.uploadComplete)return;const t=this.getFile(e);const s=t.isPaused||false;const i=!s;this.setFileState(e,{isPaused:i});this.emit("upload-pause",t,i);return i}pauseAll(){const e={...this.getState().files};const t=Object.keys(e).filter((t=>!e[t].progress.uploadComplete&&e[t].progress.uploadStarted));t.forEach((t=>{const s={...e[t],isPaused:true};e[t]=s}));this.setState({files:e});this.emit("pause-all")}resumeAll(){const e={...this.getState().files};const t=Object.keys(e).filter((t=>!e[t].progress.uploadComplete&&e[t].progress.uploadStarted));t.forEach((t=>{const s={...e[t],isPaused:false,error:null};e[t]=s}));this.setState({files:e});this.emit("resume-all")}retryAll(){const e={...this.getState().files};const t=Object.keys(e).filter((t=>e[t].error));t.forEach((t=>{const s={...e[t],isPaused:false,error:null};e[t]=s}));this.setState({files:e,error:null});this.emit("retry-all",Object.values(e));if(t.length===0)return Promise.resolve({successful:[],failed:[]});const s=_classPrivateFieldLooseBase(this,k)[k](t,{forceAllowNewUpload:true});return _classPrivateFieldLooseBase(this,K)[K](s)}cancelAll(){this.emit("cancel-all");const{files:e}=this.getState();const t=Object.keys(e);t.length&&this.removeFiles(t);this.setState(v)}retryUpload(e){this.setFileState(e,{error:null,isPaused:false});this.emit("upload-retry",this.getFile(e));const t=_classPrivateFieldLooseBase(this,k)[k]([e],{forceAllowNewUpload:true});return _classPrivateFieldLooseBase(this,K)[K](t)}logout(){this.iteratePlugins((e=>{var t;(t=e.provider)==null||t.logout==null||t.logout()}))}[Symbol.for("uppy test: updateTotalProgress")](){return _classPrivateFieldLooseBase(this,R)[R]()}updateOnlineStatus(){var e;const t=(e=window.navigator.onLine)==null||e;if(t){this.emit("is-online");if(this.wasOffline){this.emit("back-online");this.info(this.i18n("connectedToInternet"),"success",3e3);this.wasOffline=false}}else{this.emit("is-offline");this.info(this.i18n("noInternetConnection"),"error",0);this.wasOffline=true}}getID(){return this.opts.id}use(e){if(typeof e!=="function"){const t=`Expected a plugin class, but got ${e===null?"null":typeof e}. Please verify that the plugin was imported and spelled correctly.`;throw new TypeError(t)}for(var t=arguments.length,s=new Array(t>1?t-1:0),i=1;i<t;i++)s[i-1]=arguments[i];const o=new e(this,...s);const r=o.id;if(!r)throw new Error("Your plugin must have an id");if(!o.type)throw new Error("Your plugin must have a type");const l=this.getPlugin(r);if(l){const e=`Already found a plugin named '${l.id}'. Tried to use: '${r}'.\nUppy plugins must have unique \`id\` options.`;throw new Error(e)}e.VERSION&&this.log(`Using ${r} v${e.VERSION}`);o.type in _classPrivateFieldLooseBase(this,F)[F]?_classPrivateFieldLooseBase(this,F)[F][o.type].push(o):_classPrivateFieldLooseBase(this,F)[F][o.type]=[o];o.install();this.emit("plugin-added",o);return this}getPlugin(e){for(const t of Object.values(_classPrivateFieldLooseBase(this,F)[F])){const s=t.find((t=>t.id===e));if(s!=null)return s}}[Symbol.for("uppy test: getPlugins")](e){return _classPrivateFieldLooseBase(this,F)[F][e]}iteratePlugins(e){Object.values(_classPrivateFieldLooseBase(this,F)[F]).flat(1).forEach(e)}
/**
   * Uninstall and remove a plugin.
   *
   * @param {object} instance The plugin instance to remove.
   */removePlugin(e){this.log(`Removing plugin ${e.id}`);this.emit("plugin-remove",e);e.uninstall&&e.uninstall();const t=_classPrivateFieldLooseBase(this,F)[F][e.type];const s=t.findIndex((t=>t.id===e.id));s!==-1&&t.splice(s,1);const i=this.getState();const o={plugins:{...i.plugins,[e.id]:void 0}};this.setState(o)}destroy(){this.log(`Closing Uppy instance ${this.opts.id}: removing all files and uninstalling plugins`);this.cancelAll();_classPrivateFieldLooseBase(this,P)[P]();this.iteratePlugins((e=>{this.removePlugin(e)}));if(typeof window!=="undefined"&&window.removeEventListener){window.removeEventListener("online",_classPrivateFieldLooseBase(this,C)[C]);window.removeEventListener("offline",_classPrivateFieldLooseBase(this,C)[C])}}hideInfo(){const{info:e}=this.getState();this.setState({info:e.slice(1)});this.emit("info-hidden")}info(e,t,s){t===void 0&&(t="info");s===void 0&&(s=3e3);const i=typeof e==="object";this.setState({info:[...this.getState().info,{type:t,message:i?e.message:e,details:i?e.details:null}]});setTimeout((()=>this.hideInfo()),s);this.emit("info-visible")}log(e,t){const{logger:s}=this.opts;switch(t){case"error":s.error(e);break;case"warning":s.warn(e);break;default:s.debug(e);break}}registerRequestClient(e,t){_classPrivateFieldLooseBase(this,z)[z].set(e,t)}getRequestClientForFile(e){if(!e.remote)throw new Error(`Tried to get RequestClient for a non-remote file ${e.id}`);const t=_classPrivateFieldLooseBase(this,z)[z].get(e.remote.requestClientId);if(t==null)throw new Error(`requestClientId "${e.remote.requestClientId}" not registered for file "${e.id}"`);return t}restore(e){this.log(`Core: attempting to restore upload "${e}"`);if(!this.getState().currentUploads[e]){_classPrivateFieldLooseBase(this,M)[M](e);return Promise.reject(new Error("Nonexistent upload"))}return _classPrivateFieldLooseBase(this,K)[K](e)}[Symbol.for("uppy test: createUpload")](){return _classPrivateFieldLooseBase(this,k)[k](...arguments)}addResultData(e,t){if(!_classPrivateFieldLooseBase(this,x)[x](e)){this.log(`Not setting result for an upload that has been removed: ${e}`);return}const{currentUploads:s}=this.getState();const i={...s[e],result:{...s[e].result,...t}};this.setState({currentUploads:{...s,[e]:i}})}async upload(){var e;(e=_classPrivateFieldLooseBase(this,F)[F].uploader)!=null&&e.length||this.log("No uploader type plugins are used","warning");let{files:t}=this.getState();const s=Object.keys(t).filter((e=>t[e].error));const i=s.length>0;if(i){const e={...t};s.forEach((t=>{e[t]={...e[t],isPaused:false,error:null}}));this.setState({files:e,error:null});this.emit("retry-all",Object.values(e));const i=_classPrivateFieldLooseBase(this,k)[k](s,{forceAllowNewUpload:true});const o=await _classPrivateFieldLooseBase(this,K)[K](i);const r=this.getFiles().filter((e=>e.progress.uploadStarted==null));if(!r)return o;t=this.getState().files}const o=this.opts.onBeforeUpload(t);if(o===false)return Promise.reject(new Error("Not starting the upload because onBeforeUpload returned false"));if(o&&typeof o==="object"){t=o;this.setState({files:t})}return Promise.resolve().then((()=>_classPrivateFieldLooseBase(this,y)[y].validateMinNumberOfFiles(t))).catch((e=>{_classPrivateFieldLooseBase(this,L)[L]([e]);throw e})).then((()=>{if(!_classPrivateFieldLooseBase(this,O)[O](t))throw new RestrictionError(this.i18n("missingRequiredMetaField"))})).catch((e=>{throw e})).then((()=>{const{currentUploads:e}=this.getState();const s=Object.values(e).flatMap((e=>e.fileIDs));const i=[];Object.keys(t).forEach((e=>{const t=this.getFile(e);t.progress.uploadStarted||s.indexOf(e)!==-1||i.push(t.id)}));const o=_classPrivateFieldLooseBase(this,k)[k](i);return _classPrivateFieldLooseBase(this,K)[K](o)})).catch((e=>{this.emit("error",e);this.log(e,"error");throw e}))}}function _informAndEmit2(e){for(const t of e){t.isRestriction?this.emit("restriction-failed",t.file,t):this.emit("error",t,t.file);this.log(t,"warning")}const t=e.filter((e=>e.isUserFacing));const s=4;const i=t.slice(0,s);const o=t.slice(s);i.forEach((e=>{let{message:t,details:s=""}=e;this.info({message:t,details:s},"error",this.opts.infoTimeout)}));o.length>0&&this.info({message:this.i18n("additionalRestrictionsFailed",{count:o.length})})}function _checkRequiredMetaFieldsOnFile2(e){const{missingFields:t,error:s}=_classPrivateFieldLooseBase(this,y)[y].getMissingRequiredMetaFields(e);if(t.length>0){this.setFileState(e.id,{missingRequiredMetaFields:t});this.log(s.message);this.emit("restriction-failed",e,s);return false}return true}function _checkRequiredMetaFields2(e){let t=true;for(const s of Object.values(e))_classPrivateFieldLooseBase(this,U)[U](s)||(t=false);return t}function _assertNewUploadAllowed2(e){const{allowNewUpload:t}=this.getState();if(t===false){const t=new RestrictionError(this.i18n("noMoreFilesAllowed"),{file:e});_classPrivateFieldLooseBase(this,L)[L]([t]);throw t}}function _transformFile2(e){const t=e instanceof File?{name:e.name,type:e.type,size:e.size,data:e}:e;const s=r(t);const i=getFileName(s,t);const o=l(i).extension;const n=a(t,this.getID());const d=t.meta||{};d.name=i;d.type=s;const c=Number.isFinite(t.data.size)?t.data.size:null;return{source:t.source||"",id:n,name:i,extension:o||"",meta:{...this.getState().meta,...d},type:s,data:t.data,progress:{percentage:0,bytesUploaded:false,bytesTotal:c,uploadComplete:false,uploadStarted:null},size:c,isGhost:false,isRemote:t.isRemote||false,remote:t.remote,preview:t.preview}}function _startIfAutoProceed2(){this.opts.autoProceed&&!this.scheduledAutoProceed&&(this.scheduledAutoProceed=setTimeout((()=>{this.scheduledAutoProceed=null;this.upload().catch((e=>{e.isRestriction||this.log(e.stack||e.message||e)}))}),4))}function _checkAndUpdateFileState2(e){const{files:t}=this.getState();const s={...t};const i=[];const o=[];for(const a of e)try{var r;let e=_classPrivateFieldLooseBase(this,A)[A](a);const o=(r=t[e.id])==null?void 0:r.isGhost;if(o){const s=t[e.id];e={...s,isGhost:false,data:a.data};this.log(`Replaced the blob in the restored ghost file: ${e.name}, ${e.id}`)}const n=this.opts.onBeforeFileAdded(e,s);if(!n&&this.checkIfFileAlreadyExists(e.id)){var l;throw new RestrictionError(this.i18n("noDuplicates",{fileName:(l=e.name)!=null?l:this.i18n("unnamed")}),{file:a})}if(n===false&&!o)throw new RestrictionError("Cannot add the file because onBeforeFileAdded returned false.",{isUserFacing:false,file:a});typeof n==="object"&&n!==null&&(e=n);_classPrivateFieldLooseBase(this,y)[y].validateSingleFile(e);s[e.id]=e;i.push(e)}catch(e){o.push(e)}try{_classPrivateFieldLooseBase(this,y)[y].validateAggregateRestrictions(Object.values(t),i)}catch(e){o.push(e);return{nextFilesState:t,validFilesToAdd:[],errors:o}}return{nextFilesState:s,validFilesToAdd:i,errors:o}}function _updateTotalProgress2(){var e,t;const s=_classPrivateFieldLooseBase(this,N)[N]();let i=null;if(s!=null){i=Math.round(s*100);i>100?i=100:i<0&&(i=0)}this.emit("progress",(e=i)!=null?e:0);this.setState({totalProgress:(t=i)!=null?t:0})}function _calculateTotalProgress2(){const e=this.getFiles();const t=e.filter((e=>e.progress.uploadStarted||e.progress.preprocess||e.progress.postprocess));if(t.length===0)return 0;if(t.every((e=>e.progress.uploadComplete)))return 1;const isSizedFile=e=>e.progress.bytesTotal!=null&&e.progress.bytesTotal!==0;const s=t.filter(isSizedFile);const i=t.filter((e=>!isSizedFile(e)));if(s.every((e=>e.progress.uploadComplete))&&i.length>0&&!i.every((e=>e.progress.uploadComplete)))return null;const o=s.reduce(((e,t)=>{var s;return e+((s=t.progress.bytesTotal)!=null?s:0)}),0);const r=s.reduce(((e,t)=>e+(t.progress.bytesUploaded||0)),0);return o===0?0:r/o}function _addListeners2(){const errorHandler=(e,t,s)=>{let i=e.message||"Unknown error";e.details&&(i+=` ${e.details}`);this.setState({error:i});t!=null&&t.id in this.getState().files&&this.setFileState(t.id,{error:i,response:s})};this.on("error",errorHandler);this.on("upload-error",((e,t,s)=>{errorHandler(t,e,s);if(typeof t==="object"&&t.message){var i;this.log(t.message,"error");const s=new Error(this.i18n("failedToUpload",{file:(i=e==null?void 0:e.name)!=null?i:""}));s.isUserFacing=true;s.details=t.message;t.details&&(s.details+=` ${t.details}`);_classPrivateFieldLooseBase(this,L)[L]([s])}else _classPrivateFieldLooseBase(this,L)[L]([t])}));let e=null;this.on("upload-stalled",((t,s)=>{const{message:i}=t;const o=s.map((e=>e.meta.name)).join(", ");if(!e){this.info({message:i,details:o},"warning",this.opts.infoTimeout);e=setTimeout((()=>{e=null}),this.opts.infoTimeout)}this.log(`${i} ${o}`.trim(),"warning")}));this.on("upload",(()=>{this.setState({error:null})}));const onUploadStarted=e=>{const t=e.filter((e=>{const t=e!=null&&this.getFile(e.id);t||this.log(`Not setting progress for a file that has been removed: ${e==null?void 0:e.id}`);return t}));const s=Object.fromEntries(t.map((e=>[e.id,{progress:{uploadStarted:Date.now(),uploadComplete:false,bytesUploaded:0,bytesTotal:e.size}}])));this.patchFilesState(s)};this.on("upload-start",onUploadStarted);this.on("upload-progress",_classPrivateFieldLooseBase(this,T)[T]);this.on("upload-success",((e,t)=>{if(e==null||!this.getFile(e.id)){this.log(`Not setting progress for a file that has been removed: ${e==null?void 0:e.id}`);return}const s=this.getFile(e.id).progress;this.setFileState(e.id,{progress:{...s,postprocess:_classPrivateFieldLooseBase(this,_)[_].size>0?{mode:"indeterminate"}:void 0,uploadComplete:true,percentage:100,bytesUploaded:s.bytesTotal},response:t,uploadURL:t.uploadURL,isPaused:false});e.size==null&&this.setFileState(e.id,{size:t.bytesUploaded||s.bytesTotal});_classPrivateFieldLooseBase(this,I)[I]()}));this.on("preprocess-progress",((e,t)=>{e!=null&&this.getFile(e.id)?this.setFileState(e.id,{progress:{...this.getFile(e.id).progress,preprocess:t}}):this.log(`Not setting progress for a file that has been removed: ${e==null?void 0:e.id}`)}));this.on("preprocess-complete",(e=>{if(e==null||!this.getFile(e.id)){this.log(`Not setting progress for a file that has been removed: ${e==null?void 0:e.id}`);return}const t={...this.getState().files};t[e.id]={...t[e.id],progress:{...t[e.id].progress}};delete t[e.id].progress.preprocess;this.setState({files:t})}));this.on("postprocess-progress",((e,t)=>{e!=null&&this.getFile(e.id)?this.setFileState(e.id,{progress:{...this.getState().files[e.id].progress,postprocess:t}}):this.log(`Not setting progress for a file that has been removed: ${e==null?void 0:e.id}`)}));this.on("postprocess-complete",(e=>{if(e==null||!this.getFile(e.id)){this.log(`Not setting progress for a file that has been removed: ${e==null?void 0:e.id}`);return}const t={...this.getState().files};t[e.id]={...t[e.id],progress:{...t[e.id].progress}};delete t[e.id].progress.postprocess;this.setState({files:t})}));this.on("restored",(()=>{_classPrivateFieldLooseBase(this,I)[I]()}));this.on("dashboard:file-edit-complete",(e=>{e&&_classPrivateFieldLooseBase(this,U)[U](e)}));if(typeof window!=="undefined"&&window.addEventListener){window.addEventListener("online",_classPrivateFieldLooseBase(this,C)[C]);window.addEventListener("offline",_classPrivateFieldLooseBase(this,C)[C]);setTimeout(_classPrivateFieldLooseBase(this,C)[C],3e3)}}function _createUpload2(e,t){t===void 0&&(t={});const{forceAllowNewUpload:i=false}=t;const{allowNewUpload:o,currentUploads:r}=this.getState();if(!o&&!i)throw new Error("Cannot create a new upload: already uploading.");const l=s();this.emit("upload",l,this.getFilesByIds(e));this.setState({allowNewUpload:this.opts.allowMultipleUploadBatches!==false&&this.opts.allowMultipleUploads!==false,currentUploads:{...r,[l]:{fileIDs:e,step:0,result:{}}}});return l}function _getUpload2(e){const{currentUploads:t}=this.getState();return t[e]}function _removeUpload2(e){const t={...this.getState().currentUploads};delete t[e];this.setState({currentUploads:t})}async function _runUpload2(e){const getCurrentUpload=()=>{const{currentUploads:t}=this.getState();return t[e]};let t=getCurrentUpload();const s=[..._classPrivateFieldLooseBase(this,b)[b],..._classPrivateFieldLooseBase(this,S)[S],..._classPrivateFieldLooseBase(this,_)[_]];try{for(let i=t.step||0;i<s.length;i++){if(!t)break;const o=s[i];this.setState({currentUploads:{...this.getState().currentUploads,[e]:{...t,step:i}}});const{fileIDs:r}=t;await o(r,e);t=getCurrentUpload()}}catch(t){_classPrivateFieldLooseBase(this,M)[M](e);throw t}if(t){t.fileIDs.forEach((e=>{const t=this.getFile(e);t&&t.progress.postprocess&&this.emit("postprocess-complete",t)}));const s=t.fileIDs.map((e=>this.getFile(e)));const i=s.filter((e=>!e.error));const o=s.filter((e=>e.error));this.addResultData(e,{successful:i,failed:o,uploadID:e});t=getCurrentUpload()}let i;if(t){i=t.result;this.emit("complete",i);_classPrivateFieldLooseBase(this,M)[M](e)}i==null&&this.log(`Not setting result for an upload that has been removed: ${e}`);return i}Uppy.VERSION=m.version;export{Uppy,h as debugLogger,Uppy as default};

