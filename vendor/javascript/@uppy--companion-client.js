// @uppy/companion-client@4.4.1 downloaded from https://ga.jspm.io/npm:@uppy/companion-client@4.4.1/lib/index.js

import e from"@uppy/utils/lib/UserFacingApiError";import t,{AbortError as s}from"p-retry";import o from"@uppy/utils/lib/fetchWithNetworkError";import r from"@uppy/utils/lib/ErrorWithCause";import i from"@uppy/utils/lib/getSocketHost";"use strict";class AuthError extends Error{constructor(){super("Authorization required");this.name="AuthError";this.isAuthError=true}}function _classPrivateFieldLooseBase$1(e,t){if(!{}.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var n=0;function _classPrivateFieldLooseKey$1(e){return"__private_"+n+++"_"+e}const a={version:"4.4.1"};function stripSlash(e){return e.replace(/\/$/,"")}const l=10;const u=3e5;const p=401;class HttpError extends Error{constructor(e){let{statusCode:t,message:s}=e;super(s);this.name="HttpError";this.statusCode=t}}async function handleJSONResponse(t){if(t.status===p)throw new AuthError;if(t.ok)return t.json();let s=`Failed request with status: ${t.status}. ${t.statusText}`;let o;try{o=await t.json();o.message&&(s=`${s} message: ${o.message}`);o.requestId&&(s=`${s} request-Id: ${o.requestId}`)}catch(e){throw new Error(s,{cause:e})}if(t.status>=400&&t.status<=499&&o.message)throw new e(o.message);throw new HttpError({statusCode:t.status,message:s})}function emitSocketProgress(e,t,s){const{progress:o,bytesUploaded:r,bytesTotal:i}=t;if(o){var n;e.uppy.log(`Upload progress: ${o}`);e.uppy.emit("upload-progress",s,{uploadStarted:(n=s.progress.uploadStarted)!=null?n:0,bytesUploaded:r,bytesTotal:i})}}var c=_classPrivateFieldLooseKey$1("companionHeaders");var h=_classPrivateFieldLooseKey$1("getUrl");var d=_classPrivateFieldLooseKey$1("requestSocketToken");var g=_classPrivateFieldLooseKey$1("awaitRemoteFileUpload");class RequestClient{constructor(e,t){Object.defineProperty(this,g,{value:_awaitRemoteFileUpload2});Object.defineProperty(this,h,{value:_getUrl2});Object.defineProperty(this,c,{writable:true,value:void 0});Object.defineProperty(this,d,{writable:true,value:async e=>{var t;let{file:s,postBody:o,signal:r}=e;if(((t=s.remote)==null?void 0:t.url)==null)throw new Error("Cannot connect to an undefined URL");const i=await this.post(s.remote.url,{...s.remote.body,...o},{signal:r});return i.token}});this.uppy=e;this.opts=t;this.onReceiveResponse=this.onReceiveResponse.bind(this);_classPrivateFieldLooseBase$1(this,c)[c]=t.companionHeaders}setCompanionHeaders(e){_classPrivateFieldLooseBase$1(this,c)[c]=e}[Symbol.for("uppy test: getCompanionHeaders")](){return _classPrivateFieldLooseBase$1(this,c)[c]}get hostname(){const{companion:e}=this.uppy.getState();const t=this.opts.companionUrl;return stripSlash(e&&e[t]?e[t]:t)}async headers(e){e===void 0&&(e=false);const t={Accept:"application/json",...e?void 0:{"Content-Type":"application/json"}};return{...t,..._classPrivateFieldLooseBase$1(this,c)[c]}}onReceiveResponse(e){const{headers:t}=e;const s=this.uppy.getState();const o=s.companion||{};const r=this.opts.companionUrl;t.has("i-am")&&t.get("i-am")!==o[r]&&this.uppy.setState({companion:{...o,[r]:t.get("i-am")}})}async request(e){let{path:t,method:s="GET",data:i,skipPostResponse:n,signal:a}=e;try{const e=await this.headers(!i);const r=await o(_classPrivateFieldLooseBase$1(this,h)[h](t),{method:s,signal:a,headers:e,credentials:this.opts.companionCookiesRule||"same-origin",body:i?JSON.stringify(i):null});n||this.onReceiveResponse(r);return await handleJSONResponse(r)}catch(e){if(e.isAuthError||e.name==="UserFacingApiError"||e.name==="AbortError")throw e;throw new r(`Could not ${s} ${_classPrivateFieldLooseBase$1(this,h)[h](t)}`,{cause:e})}}async get(e,t){return this.request({...t,path:e})}async post(e,t,s){return this.request({...s,path:e,method:"POST",data:t})}async delete(e,t,s){return this.request({...s,path:e,method:"DELETE",data:t})}async uploadRemoteFile(e,o,r){var i=this;try{const{signal:n,getQueue:a}=r||{};return await t((async()=>{var t;const r=(t=this.uppy.getFile(e.id))==null?void 0:t.serverToken;if(r!=null){this.uppy.log(`Connecting to exiting websocket ${r}`);return _classPrivateFieldLooseBase$1(this,g)[g]({file:e,queue:a(),signal:n})}const l=a().wrapPromiseFunction((async function(){try{return await _classPrivateFieldLooseBase$1(i,d)[d](...arguments)}catch(e){if(e.isAuthError)throw new s(e);if(e.cause==null)throw e;const t=e.cause;const isRetryableHttpError=()=>[408,409,429,418,423].includes(t.statusCode)||t.statusCode>=500&&t.statusCode<=599&&![501,505].includes(t.statusCode);if(t.name==="HttpError"&&!isRetryableHttpError())throw new s(t);throw t}}),{priority:-1});const u=await l({file:e,postBody:o,signal:n}).abortOn(n);if(this.uppy.getFile(e.id)){this.uppy.setFileState(e.id,{serverToken:u});return _classPrivateFieldLooseBase$1(this,g)[g]({file:this.uppy.getFile(e.id),queue:a(),signal:n})}}),{retries:l,signal:n,onFailedAttempt:e=>this.uppy.log(`Retrying upload due to: ${e.message}`,"warning")})}catch(t){if(t.name==="AbortError")return;this.uppy.emit("upload-error",e,t);throw t}}}function _getUrl2(e){return/^(https?:|)\/\//.test(e)?e:`${this.hostname}/${e}`}async function _awaitRemoteFileUpload2(e){let{file:s,queue:o,signal:r}=e;let n;const{capabilities:a}=this.uppy.getState();try{return await new Promise(((e,p)=>{const c=s.serverToken;const h=i(s.remote.companionUrl);let d;let g;let y;let{isPaused:m}=s;const socketSend=(e,t)=>{if(d!=null&&d.readyState===d.OPEN)d.send(JSON.stringify({action:e,payload:t!=null?t:{}}));else{var o;this.uppy.log(`Cannot send "${e}" to socket ${s.id} because the socket state was ${String((o=d)==null?void 0:o.readyState)}`,"warning")}};function sendState(){a.resumableUploads&&socketSend(m?"pause":"resume")}const createWebsocket=async()=>{g&&g.abort();g=new AbortController;const onFatalError=e=>{var t;this.uppy.setFileState(s.id,{serverToken:null});(t=g)==null||t.abort==null||t.abort();p(e)};function resetActivityTimeout(){clearTimeout(y);m||(y=setTimeout((()=>onFatalError(new Error("Timeout waiting for message from Companion socket"))),u))}try{await o.wrapPromiseFunction((async()=>{const reconnectWebsocket=async()=>new Promise(((t,o)=>{d=new WebSocket(`${h}/api/${c}`);resetActivityTimeout();d.addEventListener("close",(()=>{d=void 0;o(new Error("Socket closed unexpectedly"))}));d.addEventListener("error",(e=>{var t;this.uppy.log(`Companion socket error ${JSON.stringify(e)}, closing socket`,"warning");(t=d)==null||t.close()}));d.addEventListener("open",(()=>{sendState()}));d.addEventListener("message",(t=>{resetActivityTimeout();try{const{action:a,payload:l}=JSON.parse(t.data);switch(a){case"progress":emitSocketProgress(this,l,this.uppy.getFile(s.id));break;case"success":{var o,r,i,n;const t=(o=l.response)==null?void 0:o.responseText;this.uppy.emit("upload-success",this.uppy.getFile(s.id),{uploadURL:l.url,status:(r=(i=l.response)==null?void 0:i.status)!=null?r:200,body:t?JSON.parse(t):void 0});(n=g)==null||n.abort==null||n.abort();e();break}case"error":{const{message:e}=l.error;throw Object.assign(new Error(e),{cause:l.error})}default:this.uppy.log(`Companion socket unknown action ${a}`,"warning")}}catch(e){onFatalError(e)}}));const closeSocket=()=>{this.uppy.log(`Closing socket ${s.id}`);clearTimeout(y);d&&d.close();d=void 0};g.signal.addEventListener("abort",(()=>{closeSocket()}))}));await t(reconnectWebsocket,{retries:l,signal:g.signal,onFailedAttempt:()=>{g.signal.aborted||this.uppy.log(`Retrying websocket ${s.id}`)}})}))().abortOn(g.signal)}catch(e){if(g.signal.aborted)return;onFatalError(e)}};const pause=e=>{if(a.resumableUploads){m=e;d&&sendState()}};const onFileRemove=t=>{var o;if(a.individualCancellation&&t.id===s.id){socketSend("cancel");(o=g)==null||o.abort==null||o.abort();this.uppy.log(`upload ${s.id} was removed`);e()}};const onCancelAll=()=>{var t;socketSend("cancel");(t=g)==null||t.abort==null||t.abort();this.uppy.log(`upload ${s.id} was canceled`);e()};const onFilePausedChange=(e,t)=>{(e==null?void 0:e.id)===s.id&&pause(t)};const onPauseAll=()=>pause(true);const onResumeAll=()=>pause(false);this.uppy.on("file-removed",onFileRemove);this.uppy.on("cancel-all",onCancelAll);this.uppy.on("upload-pause",onFilePausedChange);this.uppy.on("pause-all",onPauseAll);this.uppy.on("resume-all",onResumeAll);n=()=>{this.uppy.off("file-removed",onFileRemove);this.uppy.off("cancel-all",onCancelAll);this.uppy.off("upload-pause",onFilePausedChange);this.uppy.off("pause-all",onPauseAll);this.uppy.off("resume-all",onResumeAll)};r.addEventListener("abort",(()=>{var e;(e=g)==null||e.abort()}));createWebsocket()}))}finally{n==null||n()}}RequestClient.VERSION=a.version;function escapeRegex(e){return e.replace(/[/\-\\^$*+?.()|[\]{}]/g,"\\$&")}function wrapInRegex(e){return typeof e==="string"?new RegExp(`^${e}$`):e instanceof RegExp?e:void 0}function getAllowedHosts(e,t){if(e){const validate=e=>{if(!(typeof e==="string"&&wrapInRegex(e))&&!(e instanceof RegExp))throw new TypeError('The option "companionAllowedHosts" must be one of string, Array, RegExp')};Array.isArray(e)?e.every(validate):validate(e);return e}let s=t;/^(?!https?:\/\/).*$/i.test(s)&&(s=`https://${t.replace(/^\/\//,"")}`);s=new URL(s).origin;s=escapeRegex(s);return s}function isOriginAllowed(e,t){const s=Array.isArray(t)?t.map(wrapInRegex):[wrapInRegex(t)];return s.some((t=>(t==null?void 0:t.test(e))||(t==null?void 0:t.test(`${e}/`))))}function _classPrivateFieldLooseBase(e,t){if(!{}.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var y=0;function _classPrivateFieldLooseKey(e){return"__private_"+y+++"_"+e}const getName$1=e=>e.split("-").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ");function getOrigin(){return location.origin}var m=_classPrivateFieldLooseKey("refreshingTokenPromise");var v=_classPrivateFieldLooseKey("getAuthToken");var f=_classPrivateFieldLooseKey("getPlugin");class Provider extends RequestClient{constructor(e,t){super(e,t);Object.defineProperty(this,f,{value:_getPlugin2});Object.defineProperty(this,v,{value:_getAuthToken2});Object.defineProperty(this,m,{writable:true,value:void 0});this.provider=t.provider;this.id=this.provider;this.name=this.opts.name||getName$1(this.id);this.pluginId=this.opts.pluginId;this.tokenKey=`companion-${this.pluginId}-auth-token`;this.companionKeysParams=this.opts.companionKeysParams;this.preAuthToken=null;this.supportsRefreshToken=!!t.supportsRefreshToken}async headers(){const[e,t]=await Promise.all([super.headers(),_classPrivateFieldLooseBase(this,v)[v]()]);const s={};t&&(s["uppy-auth-token"]=t);this.companionKeysParams&&(s["uppy-credentials-params"]=btoa(JSON.stringify({params:this.companionKeysParams})));return{...e,...s}}onReceiveResponse(e){super.onReceiveResponse(e);const t=_classPrivateFieldLooseBase(this,f)[f]();const s=t.getPluginState().authenticated;const o=s?e.status!==p:e.status<400;t.setPluginState({authenticated:o});return e}async setAuthToken(e){return _classPrivateFieldLooseBase(this,f)[f]().storage.setItem(this.tokenKey,e)}async removeAuthToken(){return _classPrivateFieldLooseBase(this,f)[f]().storage.removeItem(this.tokenKey)}async ensurePreAuth(){if(this.companionKeysParams&&!this.preAuthToken){await this.fetchPreAuthToken();if(!this.preAuthToken)throw new Error("Could not load authentication data required for third-party login. Please try again later.")}}authQuery(e){return{}}authUrl(e){let{authFormData:t,query:s}=e;const o=new URLSearchParams({...s,state:btoa(JSON.stringify({origin:getOrigin()})),...this.authQuery({authFormData:t})});this.preAuthToken&&o.set("uppyPreAuthToken",this.preAuthToken);return`${this.hostname}/${this.id}/connect?${o}`}async loginSimpleAuth(e){let{uppyVersions:t,authFormData:s,signal:o}=e;const r=await this.post(`${this.id}/simple-auth`,{form:s},{qs:{uppyVersions:t},signal:o});this.setAuthToken(r.uppyAuthToken)}async loginOAuth(e){let{uppyVersions:t,authFormData:s,signal:o}=e;await this.ensurePreAuth();o.throwIfAborted();return new Promise(((e,r)=>{const i=this.authUrl({query:{uppyVersions:t},authFormData:s});const n=window.open(i,"_blank");let a;const handleToken=t=>{if(t.source!==n){let e="";try{e=JSON.stringify(t.data)}catch(e){}this.uppy.log(`ignoring event from unknown source ${e}`,"warning");return}const{companionAllowedHosts:s}=_classPrivateFieldLooseBase(this,f)[f]().opts;if(!isOriginAllowed(t.origin,s)){r(new Error(`rejecting event from ${t.origin} vs allowed pattern ${s}`));return}const o=typeof t.data==="string"?JSON.parse(t.data):t.data;if(o.error){const{uppy:e}=this;const t=e.i18n("authAborted");e.info({message:t},"warning",5e3);r(new Error("auth aborted"))}else if(o.token){a();e(this.setAuthToken(o.token))}else r(new Error("did not receive token from auth window"))};a=()=>{n==null||n.close();window.removeEventListener("message",handleToken);o.removeEventListener("abort",a)};o.addEventListener("abort",a);window.addEventListener("message",handleToken)}))}async login(e){let{uppyVersions:t,authFormData:s,signal:o}=e;return this.loginOAuth({uppyVersions:t,authFormData:s,signal:o})}refreshTokenUrl(){return`${this.hostname}/${this.id}/refresh-token`}fileUrl(e){return`${this.hostname}/${this.id}/get/${e}`}async request(){await _classPrivateFieldLooseBase(this,m)[m];try{return await super.request(...arguments)}catch(e){if(!this.supportsRefreshToken)throw e;const t=await _classPrivateFieldLooseBase(this,v)[v]();if(!e.isAuthError||!t)throw e;_classPrivateFieldLooseBase(this,m)[m]==null&&(_classPrivateFieldLooseBase(this,m)[m]=(async()=>{try{this.uppy.log("[CompanionClient] Refreshing expired auth token");const e=await super.request({path:this.refreshTokenUrl(),method:"POST"});await this.setAuthToken(e.uppyAuthToken)}catch(t){t.isAuthError&&await this.removeAuthToken();throw e}finally{_classPrivateFieldLooseBase(this,m)[m]=void 0}})());await _classPrivateFieldLooseBase(this,m)[m];return super.request(...arguments)}}async fetchPreAuthToken(){if(this.companionKeysParams)try{const e=await this.post(`${this.id}/preauth/`,{params:this.companionKeysParams});this.preAuthToken=e.token}catch(e){this.uppy.log(`[CompanionClient] unable to fetch preAuthToken ${e}`,"warning")}}list(e,t){return this.get(`${this.id}/list/${e||""}`,t)}async logout(e){const t=await this.get(`${this.id}/logout`,e);await this.removeAuthToken();return t}}async function _getAuthToken2(){return _classPrivateFieldLooseBase(this,f)[f]().storage.getItem(this.tokenKey)}function _getPlugin2(){const e=this.uppy.getPlugin(this.pluginId);if(e==null)throw new Error("Plugin was nullish");return e}const getName=e=>e.split("-").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ");class SearchProvider extends RequestClient{constructor(e,t){super(e,t);this.provider=t.provider;this.id=this.provider;this.name=this.opts.name||getName(this.id);this.pluginId=this.opts.pluginId}fileUrl(e){return`${this.hostname}/search/${this.id}/get/${e}`}search(e,t){return this.get(`search/${this.id}/list?q=${encodeURIComponent(e)}${t?`&${t}`:""}`)}}async function setItem(e,t){localStorage.setItem(e,t)}async function getItem(e){return localStorage.getItem(e)}async function removeItem(e){localStorage.removeItem(e)}var w=Object.freeze(Object.defineProperty({__proto__:null,getItem:getItem,removeItem:removeItem,setItem:setItem},Symbol.toStringTag,{value:"Module"}));export{Provider,RequestClient,SearchProvider,getAllowedHosts,w as tokenStorage};

