<div class="container mt-4">
  <h1>動画のアップロード</h1>

  <%= form_with(model: @video, local: true, data: { controller: 'video-upload' }) do |f| %>
    <% if @video.errors.any? %>
      <div class="alert alert-danger">
        <h4><%= pluralize(@video.errors.count, "error") %> が発生しました:</h4>
        <ul>
          <% @video.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <div class="mb-3">
      <%= f.label :title, "タイトル", class: "form-label" %>
      <%= f.text_field :title, class: "form-control" %>
    </div>

    <div class="mb-3">
      <%= f.label :description, "説明", class: "form-label" %>
      <%= f.text_area :description, class: "form-control" %>
    </div>

    <div class="mb-3">
      <label class="form-label">動画ファイル</label>
      <!-- Uppyダッシュボード用のコンテナ -->
      <div id="uppy-dashboard"></div>
      <%= f.hidden_field :movie_uploaded, value: false, data: { target: 'video-upload.uploadedFlag' } %>
    </div>

    <%= f.submit "アップロード", class: "btn btn-primary", data: { disable_with: "アップロード中..." } %>
  <% end %>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Uppyインスタンスの初期化
  const uppy = initializeUppy('video', <%= @video&.id || 'null' %>);
  
  // アップロード完了時の処理
  uppy.on('upload-success', (file, response) => {
    document.querySelector('[data-target="video-upload.uploadedFlag"]').value = 'true';
    // 必要に応じて追加の処理（例：フォームの自動送信など）
  });
});
</script>

<% content_for :styles do %>
  <style>
    /* Uppyダッシュボードのカスタマイズ */
    .uppy-Dashboard {
      border: 2px dashed #ccc;
      border-radius: 8px;
    }
    .uppy-Dashboard-inner {
      width: 100% !important;
    }
  </style>
<% end %>
