<meta name="turbolinks-visit-control" content="reload">

<style>
.toggle_input {
  /* position: absolute; */
  /* left: 0;
  top: 0; */
  /* width: 100%;
  height: 100%; */
  z-index: 5;
  opacity: 0;
  cursor: pointer;
}

.toggle_label {
  width: 30px;
  height: 15px;
  background: #ccc;
  position: relative;
  display: inline-block;
  border-radius: 40px;
  transition: 0.4s;
  box-sizing: border-box;
}

.toggle_label:after {
  content: "";
  position: absolute;
  width: 15px;
  height: 15px;
  border-radius: 100%;
  left: 0;
  top: 0;
  z-index: 2;
  background: #fff;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
  transition: 0.3s;
}

.toggle_input:checked + .toggle_label {
  background-color: #4BD865;
}

.toggle_input:checked + .toggle_label:after {
  left: 16px;
}

.toggle_button {
  display: flex;
  align-items: center;
  margin-bottom: 20px; /* ボタン間のスペースを追加 */
}

.toggle_button label {
  margin-left: 10px; /* トグルボタンとテキストの間にスペースを追加 */
}

.toggle_button input {
  margin-left: 10px; /* トグルボタンとテキストの間にスペースを追加 */
}

/* オープン時にアニメーションを設定 */
details[open] .details-content {
  animation: fadeIn 0.5s ease;
}
@keyframes fadeIn {
  0% {
    opacity: 0; /* 透明 */
    transform: translateY(-10px); /* 上から表示 */
  }
  100% {
    opacity: 1;
    transform: none;
  }
}

/* From Uiverse.io by Na3ar-17 */ 
.radio-input {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.radio-input * {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

.radio-input label {
  display: flex;
  align-items: center;
  gap: 15px;
  padding: 0px 20px;
  width: 220px;
  cursor: pointer;
  height: 50px;
  position: relative;
}

.radio-input label::before {
  position: absolute;
  content: "";
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 220px;
  height: 45px;
  z-index: 0;
  transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  border-radius: 10px;
  border: 2px solid transparent;
}
.radio-input label:hover::before {
  transition: all 0.2s ease;
  background-color: #2a2e3c;
}

.radio-input .label:has(input:checked)::before {
  background-color: #2d3750;
  border-color: #435dd8;
  height: 50px;
}
.radio-input .label .text {
  color: #fff;
  z-index: 3;
}

.radio-input .label input[type="radio"] {
  background-color: #202030;
  appearance: none;
  width: 17px;
  height: 17px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}
.radio-input .label input[type="radio"]:checked {
  background-color: #435dd8;
  -webkit-animation: puls 0.7s forwards;
  animation: pulse 0.7s forwards;
}

.radio-input .label input[type="radio"]:before {
  content: "";
  width: 6px;
  height: 6px;
  border-radius: 50%;
  transition: all 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
  background-color: #fff;
  transform: scale(0);
}

.radio-input .label input[type="radio"]:checked::before {
  transform: scale(1);
  z-index: 0;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.4);
  }
  70% {
    box-shadow: 0 0 0 8px rgba(255, 255, 255, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
  }
}

.calendar {
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 20px;
  margin-top: 20px;
}
.calendar-header {
  display: flex;
  align-items: center;
  gap: 10px;
}
.calendar-body {
  margin-top: 20px;
}
.time-slot {
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 10px;
  min-height: 100px;
}
.practice-card {
  background-color: #f8f9fa;
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 10px;
  margin-top: 10px;
}

select#practice-select {
  width: 100%;
  -webkit-appearance: none; /* Safari and Chrome */
  -moz-appearance: none; /* Firefox */
  appearance: none; /* Standard */
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  background: url('data:image/svg+xml;utf8,<svg fill="%23333" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/></svg>') no-repeat right 10px center;
  background-size: 12px;
  background-color: #fff;
  box-sizing: border-box;
}

@media (max-width: 600px) {
  select#practice-select {
    font-size: 16px;
    padding: 12px;
  }
}

</style>

<div class='container px-5 px-sm-0'>
  <div class='row'>
    <div class='col-md-12'>
      <h2 style='margin-top: 30px;'><%= @group.name %></h2>
        <td>
          <div class="panel-group">
            <div class="panel panel-default" style="margin-bottom: 30px;">
              <div class="panel-heading">
                <a data-toggle="collapse" href="#collapse2" aria-expanded="false" aria-controls="collapse2">
                  <%= image_tag 'group.png', size: "23x23" %><%= @group.users.size %>
                </a>
              </div>
              <div id="collapse2" class="panel-collapse collapse" aria-labelledby="headingTwo">
                <ul class="list-group">
                  <% @group.users.each do |user| %>
                    <li class="list-group-item"><%= user.username %></li>
                  <% end %>
                </ul>
              </div>
            </div>
          </div>
        </td>

        <%= link_to '試合 映像', group_video_path(@group), "data-turbo": false, class: "btn btn btn-outline-dark", style: "margin-top: 10px; border-width: 2px; border-radius: 0;" %>

        <%= link_to 'ノート一覧', group_note_path(@group), "data-turbo": false, class: "btn btn btn-outline-dark", style: "margin-top: 10px; border-width: 2px; border-radius: 0;" %>

        <%= link_to '練習メニュー', group_practice_path(@group), "data-turbo": false, class: "btn btn btn-outline-dark", style: "margin-top: 10px; border-width: 2px; border-radius: 0;" %>

        <!-- モーダルを開くボタン -->
        <%= link_to 'ノートを書く', '', "data-turbo": false, class: "modal-open btn btn btn-outline-primary", style: "margin-top: 10px; border-width: 2px; border-radius: 0;" %>

        <!-- モーダル本体 -->
        <div class="modal-container">
          <div class="modal-body">
            <!-- 閉じるボタン -->
            <div class="modal-close">×</div>
            <!-- モーダル内のコンテンツ -->
            <div class="modal-content">
              <p><span style="font-weight: bold; color: white;">このノートは</span><br>
                <div class="radio-input">
                  <label class="label">
                    <input
                      type="radio"
                      id="value-1"
                      checked=""
                      name="value-radio"
                      value="value-1"
                    />
                    <p class="text">試合の振り返り</p>
                  </label>
                  <label class="label">
                    <input type="radio" id="value-2" name="value-radio" value="value-2" />
                    <p class="text">練習の振り返り</p>
                  </label>
                </div>

                <%# <input type="radio" name="num_of_inq" id="radio-match" value="試合の振り返り" style="margin-top: 10px;"><label for="radio-match" style="margin-left: 5px;">試合の振り返り</label><br>
                <input type="radio" name="num_of_inq" id="radio-practice" value="練習の振り返り"><label for="radio-practice" style="margin-left: 5px;">練習の振り返り</label> %>
              </p>
              <div class="toggle_button" style="color: white;">
                動画の有無
                <input id="toggle" class="toggle_input" type='checkbox'/>
                <label for="toggle" class="toggle_label" />
              </div>

              <div class="video-index" id="video-index" style="margin-bottom: 10px;">
                <div class="list-group">
                  <% @videos.each_with_index do |video, index| %>
                    <div class="list-group-item list-group-item-action" style="color: white; background-color: #202030;" data-video-id='<%= video.id %>' onclick="selectVideo(this)"><%= video.title %></div>
                  <% end %>
                </div>
              </div>

              <script>
                let selectedVideoId;
                function selectVideo(element) {
                  // すべてのリストアイテムのoutlineと文字色をリセット
                  document.querySelectorAll('.list-group-item').forEach(item => {
                    item.style.outline = '';
                    item.style.color = 'white';
                    item.style.boxShadow = '';
                    item.style.zIndex = '';
                  });
                  // クリックされたアイテムのoutlineと文字色を設定

                  if (element.getAttribute('data-video-id') == selectedVideoId) {
                    selectedVideoId = null;
                    element.style.outline = '';
                    element.style.color = 'white';
                    element.style.boxShadow = '';
                    element.style.zIndex = '';
                    $('#create-note-btn').addClass("disabled");
                  } else {
                    selectedVideoId = element.getAttribute('data-video-id');
                    element.style.outline = '2px solid #435dd8'; // 青色のoutline
                    element.style.color = 'white';
                    element.style.boxShadow = '0 4px 8px 0 rgba(0, 0, 0, 0.2)';
                    element.style.zIndex = '2'; // 最前面に表示
                    $("#create-note-btn").removeClass("disabled");
                  }
                }

                // セレクトボックス全体の四角を丸くする
                document.addEventListener('DOMContentLoaded', function() {
                  selectedVideoId = null;
                  document.querySelector('.list-group').style.borderRadius = '5px';
                  const toggle = document.getElementById('toggle');
                  if (toggle.checked) {
                    if (selectedVideoId) {
                      $("#create-note-btn").removeClass("disabled");
                    } else {
                      $("#create-note-btn").addClass("disabled");
                    }
                  } else {
                    $("#create-note-btn").removeClass("disabled");
                  }
                });

                document.getElementById('toggle').addEventListener('change', function() {
                  if (this.checked) {
                    if (selectedVideoId) {
                      $("#create-note-btn").removeClass("disabled");
                    } else {
                      $("#create-note-btn").addClass("disabled");
                    }
                  } else {
                    $("#create-note-btn").removeClass("disabled");
                  }
                });

                function createNotePath() {
                  const toggle = document.getElementById('toggle');
                  let path = '<%= new_note_path(with_video: false) %>';
                  if (toggle.checked) {
                    if (selectedVideoId) {
                      $("#create-note-btn").removeClass("disabled");
                      path = '<%= new_note_path(with_video: true) %>' + `&video_id=${selectedVideoId}`;
                    } else {
                      $("#create-note-btn").addClass("disabled");
                    }
                  }
                  return path;
                }
              </script>
              <%= link_to 'ノートを作成', '#', "data-turbo": false, id: "create-note-btn",class: "btn btn btn-outline-light", style: "margin-top: 10px; border-width: 2px; border-radius: 0;", onclick: "window.location.href = createNotePath();" %>
            </div>

          </div>
        </div>

        <td>
          <div class="row" style="margin-top: 30px;">
            <div class="container mt-5">
              <h3 class="mb-4">1日の練習メニュー</h1>
              
              <div class="mb-3">
                <label class="form-label">1日の練習時間 (分)</label>
                <input
                  id="total-practice-time"
                  type="number"
                  name="totalPracticeTime"
                  class="form-control"
                  value="<%= @daily_practice.duration %>"
                />
              </div>

              <div class="mb-3">
                <label class="form-label">練習メニュー</label>
                <select
                  id="practice-select"
                  name="newItem"
                  class="form-control"
                >
                  <% @practices.each do |practice| %>
                    <option value="<%= practice.id %>"><%= practice.name %></option>
                  <% end %>
                </select>
                <label class="form-label mt-2">トレーニング時間(分)</label>
                <input
                  type="number"
                  id="practice-time"
                  name="newItemTime"
                  class="form-control"
                  placeholder="時間 (分)"
                />
                <button id="add-practice" class="btn btn-primary mt-2" style="border-radius: 0px;" data-group-id="<%= @group.id %>">
                  追加
                </button>
                <p id="alert" style="color: red;"></p>
              </div>

              <div id="calender">
                <h4>練習スケジュール</h4>
                <div class="card mt-4">
                  <%# <div class="card-header">
                    <h2 class="mb-0">1日の練習カレンダー</h2>
                  </div> %>
                  <div class="card-body">
                    <div id="time-slot" class="row">
                      <!-- 動的に生成される練習項目のカードがここに表示される -->
                      <% if @group.daily_practice %>
                        <% @group.daily_practice.daily_practice_items.each do |item| %>
                          <div class="col-md-4 mb-3">
                            <div class="card">
                              <div class="card-body">
                                <h5 class="card-title"><%= item.practice.name %></h5>
                                <p class="card-text" id="card-time" data-training-time="<%= item.training_time %>"><%= item.training_time %> 分</p>
                              </div>
                            </div>
                          </div>
                        <% end %>
                      <% else %>
                        <p>現在、練習メニューが設定されていません。</p>
                      <% end %>
                    </div>
                  </div>
                  
                  <% sum_of_training_time = 0 %>
                  <% @group.daily_practice.daily_practice_items.each do |item| %>
                    <% sum_of_training_time += item.training_time %>
                  <% end %>
                  <div style="margin-left: 20px; margin-bottom: 10px;">合計: <%= sum_of_training_time %>分</div>
                </div>
              </div>

              <div class="mt-3">
                <p id="sum_of_time"></p>
              </div>
            </div>
          </div>
        </td>

        <td>
          <div class="row" style="margin-top: 30px;">
            <details>
              <summary class="h4">直近の動画</summary>
              <div class="details-content row">
                <% @videos.last(3).reverse.each do |video| %>
                  <div class="col-sm-6 col-md-4 col-lg-4">
                    <%= link_to video_path(video), "data-turbo": false, class: "card mb-4", style: "text-decoration: none; color: black;" do %>
                      <% s3 = Aws::S3::Resource.new(
                              region: "ap-northeast-1",
                              credentials: Aws::Credentials.new(
                                Rails.application.credentials.dig(:aws, :access_key_id),
                                Rails.application.credentials.dig(:aws, :secret_access_key)
                              )
                            )
                        signer = Aws::S3::Presigner.new(client: s3.client)
                        presigned_url = signer.presigned_url(:get_object, bucket: Rails.application.credentials.dig(:aws, :bucket), key: "output/thumbnail/#{video.video.filename.base}/#{video.video.filename.base}_thumbnail.0000000.jpg", expires_in: 60) %>
                      <%= image_tag presigned_url, class: "card-img-top" %>

                      <div class="card-body">
                        <h5 class="card-title"><%= video.title %></h5>
                        <div class="d-flex justify-content-between align-items-center">
                          <small class="text-muted"><%= time_ago_in_words(video.created_at) %> ago</small>
                        </div>
                      </div>
                    <% end %>
                  </div>
                <% end %>
              </div>
            </details>
          </div> 
        </td>

        <td>
          <div class="row" style="margin-top: 30px;">
            <h4>タイムライン</h4>
            <div class="details-content row">
              <div class="timeline">
                <% @timeline.each do |item| %>
                  <div class="timeline-item">
                    <% if item.is_a?(Video) %>
                      <%= link_to video_path(item), "data-turbo": false, class: "card mb-4", style: "text-decoration: none; color: black;" do %>
                        <div class="card-body">
                          <h5 class="card-title">新しい動画がアップロードされました！</h5>
                          <p class="card-text"><%= item.title %></p>
                          <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted"><%= time_ago_in_words(item.created_at) %>前</small>
                          </div>
                        </div>
                      <% end %>
                    <% elsif item.is_a?(Note) %>
                      <%= link_to note_path(item), "data-turbo": false, style: "text-decoration: none; color: black;" do %>
                        <div class="card mb-4">
                          <div class="card-body">
                            <h5 class="card-title"><%= item.user.username %>が新しいノートを共有しました!</h5>
                            <p class="card-text"><%= item.title %></p>
                            <div class="d-flex justify-content-between align-items-center">
                              <small class="text-muted"><%= time_ago_in_words(item.created_at) %>前</small>
                            </div>
                          </div>
                        </div>
                      <% end %>
                    <% end %>
                  </div>
                <% end %>
              </div>
            </div>
          </div>
        </td>

        <td>
          <% if @group.owner_id == current_user.id %>
            <%= link_to 'Edit', edit_group_path(@group), class: "btn btn-success", style: "margin-top: 30px;"%>
            <%= button_to '招待リンクを発行', generate_invite_link_group_path(@group), method: :post, class: "btn btn-primary rounded btn-sm", style: "font-size: calc(0.53rem + 0.5vw); margin-top: 10px;" %>
            <%# <%= link_to 'ChatPage', group_chat_path(@group), "data-turbo": false, class: "btn btn-success", style: "margin-top: 10px;"%>
            <%= button_to 'このグループから退会', group_path(@group), method: :delete, class: "btn btn-danger", style: "margin-top: 15px;"%>
            <%= button_to 'このグループを削除', group_all_destroy_path(@group), method: :delete, class: "btn btn-danger", style: "margin-top: 10px;"%>
          <% elsif @group.users.include?(current_user) %>
            <%= button_to '招待リンクを発行', generate_invite_link_group_path(@group), method: :post, class: "btn btn-primary rounded btn-sm", style: "font-size: calc(0.53rem + 0.5vw); margin-top: 15px;" %>
            <%= button_to 'このグループから退会', group_path(@group), method: :delete, class: "btn btn-danger", style: "margin-top: 15px;"%>
          <% end %>
        </td>

    </div>
  </div>
</div>

<script>
  $(function(){
    // 変数に要素を入れる
    var open = $('.modal-open'),
      close = $('.modal-close'),
      container = $('.modal-container');

    //開くボタンをクリックしたらモーダルを表示する
    open.on('click',function(){	
      container.addClass('active');
      return false;
    });

    //閉じるボタンをクリックしたらモーダルを閉じる
    close.on('click',function(){	
      container.removeClass('active');
    });

    //モーダルの外側をクリックしたらモーダルを閉じる
    $(document).on('click',function(e) {
      if(!$(e.target).closest('.modal-body').length) {
        container.removeClass('active');
      }
    });

      const videoIndex = $('#video-index');
      videoIndex.hide();
    // トグルボタンの状態を監視
    $('#toggle').on('change', function() {
      if (this.checked) {
        videoIndex.show();
      } else {
        videoIndex.hide();
      }
    });
  });

  var sum_of_time = 0;
  $('#time-slot .card .card-body .card-text').each(function() {
    sum_of_time += parseInt($(this).data('training-time'));
  });
  console.log(sum_of_time);

  document.getElementById('add-practice').addEventListener('click', function() {
    document.getElementById('calender').style = '';
    const time = document.getElementById('practice-time').value;
    sum_of_time += parseInt(time);
    const practiceSelect = document.getElementById('practice-select');
    const practiceName = practiceSelect.options[practiceSelect.selectedIndex].text;
    if (time && practiceName) {
      const total_time = parseInt(document.getElementById("total-practice-time").value);
      if (sum_of_time > total_time) {
        document.getElementById('alert').innerText = "練習時間の合計が、指定した1日の練習時間を超えています。";
        sum_of_time -= parseInt(time);
        return;
      }
      else
      {
        document.getElementById('alert').text = "";
      }

      // サーバーにデータを送信
      const groupId = this.getAttribute('data-group-id');
      const practiceId = practiceSelect.options[practiceSelect.selectedIndex].value;
      console.log("practiceId: ", practiceId);
      
      fetch(`/groups/${groupId}/create_daily_practice_item`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        },
        body: JSON.stringify({
          whole_training_time: parseInt(document.getElementById("total-practice-time").value),
          practice_id: practiceId,
          training_time: time
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          console.log("succeed!!");
          const practiceCard = document.createElement('div');
          practiceCard.className = 'col-md-4 mb-3';
          practiceCard.innerHTML = `
            <div class="card">
              <div class="card-body">
                <h5 class="card-title">${practiceName}</h5>
                <p class="card-text">練習時間: ${time} 分</p>
              </div>
            </div>
          `;
          document.getElementById('time-slot').appendChild(practiceCard);
          document.getElementById('sum_of_time').innerText = `総練習時間: ${sum_of_time} 分`;
        } else {
          console.log("faild...");
          console.log(data.error);
        }
      })
      .catch(error => {
        console.error('エラー:', error);
        alert('エラーが発生しました。');
      });

    }
  });
</script>